>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
array([[19, 22],
       [43, 50]])
>>> lazy_matrix_mul([[1, 2], [3, 4], [3, 4]],  [[5, 6, 1], [7, 8, 2]])
array([[19, 22,  5],
       [43, 50, 11],
       [43, 50, 11]])
>>> lazy_matrix_mul("Holberton", [[5, 6], [7, 8]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul([[5, 6], [7, 8]], "Holberton")
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([1, 2, 3, 4], [[5, 6], [7, 8]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([[5, 6], [7, 8]],  [1, 2, 3, 4])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul( [[]], [[5, 6], [7, 8]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[5, 6], [7, 8]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([[5, "6"], [7, 8]], [[5, 6], [7, 8]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> lazy_matrix_mul([[5, 6], [7, 8]], [[5, "6"], [7, 8]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> lazy_matrix_mul([[5, 6, 10], [7, 8]], [[5, 6], [7, 8]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size
>>> lazy_matrix_mul([[5, 6], [7, 8]], [[5, 6, 1], [7, 8]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
>>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
>>> lazy_matrix_mul([[5, 6], [7, 8]])
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
>>> lazy_matrix_mul()
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
